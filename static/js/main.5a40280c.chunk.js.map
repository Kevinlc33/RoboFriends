{"version":3,"sources":["constants.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","components/CounterButton.js","components/Header.js","components/MainPage.js","containers/App.js","actions.js","reducers.js","index.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","Card","name","email","id","className","width","height","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","aria-label","type","placeholder","onChange","Scroll","props","style","overflow","border","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","CounterButton","updateCount","count","color","onClick","PureComponent","Header","MainPage","filterRobots","filter","robot","toLowerCase","includes","searchField","onRequestRobots","onSearchChange","isPending","App","connect","searchRobots","requestRobots","dispatch","event","text","target","value","payload","fetch","then","response","json","data","catch","inititalStateSearch","inititalStateRobots","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a40280c.chunk.js","sourcesContent":["export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React from 'react';\r\n\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n            <img width=\"200\" height=\"200\" alt='robots' src={`https://robohash.org/set_any/bgset_bg1/${id}?size=200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card\r\n                            key={i}\r\n                            id={robots[i].id}\r\n                            name={robots[i].name}\r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                aria-label='Search Robots'\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { hasError: false }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Something went wrong.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import React, { PureComponent } from 'react';\r\n\r\nclass CounterButton extends PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    updateCount = () => {\r\n        this.setState(state => {\r\n            return { count: state.count + 1 }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button\r\n                id='counter'\r\n                color={this.props.color}\r\n                onClick={this.updateCount}>\r\n                Count: {this.state.count}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CounterButton;","import React, { Component } from 'react';\r\nimport CounterButton from './CounterButton';\r\n\r\nclass Header extends Component {\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //   return false;\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className='f2;'>RoboFriends</h1>\r\n                <CounterButton color={'red'} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundary';\r\nimport Header from '../components/Header';\r\n\r\nimport './MainPage.css';\r\n\r\n\r\nclass MainPage extends Component {\r\n    componentDidMount() {\r\n        this.props.onRequestRobots();\r\n    }\r\n\r\n    filterRobots = () => {\r\n        return this.props.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.props.searchField.toLowerCase());\r\n        })\r\n    }\r\n    render() {\r\n        const { onSearchChange, isPending } = this.props;\r\n\r\n        return (\r\n            <div className='tc'>\r\n                <Header />\r\n                <SearchBox searchChange={onSearchChange} />\r\n                <Scroll>\r\n                    {isPending ? <h1>Loading</h1> :\r\n                        <ErrorBoundry>\r\n                            <CardList robots={this.filterRobots()} />\r\n                        </ErrorBoundry>\r\n                    }\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPage","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setSearchField, requestRobots } from '../actions';\r\n\r\nimport MainPage from '../components/MainPage';\r\n\r\nimport './App.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchField: state.searchRobots.searchField,\r\n        robots: state.requestRobots.robots,\r\n        isPending: state.requestRobots.isPending\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n        onRequestRobots: () => dispatch(requestRobots())\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return <MainPage {...this.props} />\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import {\r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from './constants.js'\r\n\r\nexport const setSearchField = (text) => ({\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text\r\n})\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n    dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n        .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\r\n}","import {\r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from './constants.js'\r\n\r\nconst inititalStateSearch = {\r\n    searchField: ''\r\n}\r\n\r\nexport const searchRobots = (state = inititalStateSearch, action = {}) => {\r\n    switch (action.type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return Object.assign({}, state, { searchField: action.payload });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst inititalStateRobots = {\r\n    isPending: false,\r\n    robots: []\r\n}\r\n\r\nexport const requestRobots = (state = inititalStateRobots, action = {}) => {\r\n    switch (action.type) {\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return Object.assign({}, state, { isPending: true });\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return Object.assign({}, state, { robots: action.payload, isPending: false });\r\n        case REQUEST_ROBOTS_FAILED:\r\n            return Object.assign({}, state, { error: action.payload, isPending: false });\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\n\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport { searchRobots, requestRobots } from './reducers';\n\n\n\nconst rootReducer = combineReducers({ searchRobots, requestRobots })\nconst store =\n  createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}